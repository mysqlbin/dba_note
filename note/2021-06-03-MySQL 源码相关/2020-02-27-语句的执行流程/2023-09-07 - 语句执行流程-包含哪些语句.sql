
1、update语句
2、Online DDL
3、drop表
4、在线调整BP缓冲池大小
5、analyze table


通过updtate语句的执行流程构建MySQL知识网络； 



update语句的生命周期（执行流程），构建属于自己的MySQL知识网络； 

偏向于可以熟悉MySQL体系结构、InnoDB存储引擎，还可以通过对其进一步扩展，。


1-4的执行流程， 更偏向于日常运维，需要执行的SQL语句；熟悉对应的执行流程及可能会导致的业务影响，对数据库/业务的风险，有一定的把控能力；

当然，SQL上线，我们已实现平台化、自助化，执行日常的SQL上线单，权限粒度：人员、可执行时间；
高危SQL，rename table、drop table、delete语句等高危语句，只能DBA审计、执行；




怎么证明自己是不是真的把原理弄清楚了呢？答案是说出来、写出来。


通过github来运营



先把update语句的执行流程，梳理出来；
国庆后在叶老师的公众号投稿。
提升自己在业界的影响力。




通过updtate语句的执行流程构建MySQL知识网络


作者：李锡超，一个爱笑的江苏苏宁银行 数据库工程师，主要负责数据库日常运维、自动化建设、DMP 平台运维。擅长 MySQL、Python、Oracle，爱好骑行、研究技术。


作者：卢同学，多年MySQL DBA经验，就职于深圳某互联网公司；主要负责维护数据库的稳定、数据库相关能力建设、DB平台建设；熟悉MySQL、云原生数据库、Redis、MongoDB等产品的运维；对MySQL源码有一定的兴趣和了解。


目录

一、目标
二、update语句的执行流程(生命周期)
三、运营
四、写在最后


背景是否有必要，可以先不管。

	
一、目标
	梳理update语句的执行流程(生命周期)，并对其进行扩展，构建属于自己的MySQL知识网络。


二、update语句的执行流程(生命周期)
	一图胜千言，关于update语句的执行流程，我画了思维导图。
	其中，对 Undo -> MVCC -> 事务隔离级别，进行了比较多的扩展，因为它们具有很强的关联性：借助Undo，实现MVCC；借助MVCC，实现事务隔离级别。
	
	
三、运营
	由于个人能力有限，说的不一定全对哈。
	我们要定期更新自己的知识，在对MySQL有了更深入的理解后，应该定期回过头来看看自己早期整理的笔记，大概率会发现很多错误；不过，无须沮丧，这说明能力提高了，更正它们。
	为此，建了个github项目，借助github来运营，后续对其进行更新、迭代。
	
	语句的执行流程，除了update，后续还会梳理Online DDL、drop表、在线调整BP缓冲池大小、analyze table等语句执行流程、以及这些语句可能产生的影响。
	drop表等，更偏向于日常运维，需要执行的SQL语句；熟悉其执行流程，以及可能会产生的业务影响，对风险有一定的掌控力。
	
	项目地址：
	
四、写在最后
	
	因工作日比较忙，花了多个非工作日上的时间，把update语句的执行流程，用思维导图画了出来。
	稍微体会到了创作者的不易，特别是持续输出原创文章，出版书籍的大佬们。
	最后，感谢叶老师的review。
	








2、梳理Online DDL、drop表、在线调整BP缓冲池大小、analyze table等语句


















